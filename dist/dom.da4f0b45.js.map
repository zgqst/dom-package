{"version":3,"sources":["dom.js"],"names":["window","dom","create","name","test","container","document","createElement","innerHTML","trim","content","firstChild","append","parent","child","appendChild","before","node1","node2","parentNode","insertBefore","after","nextSibling","remove","node","removeChild","wrap","empty","temp","push","attr","value","arguments","length","getAttribute","setAttribute","text","string","innerText","textContent","html","style","key","class","add","classList","has","contains","on","event","fn","addEventListener","off","removeEventListener","find","scope","_node","querySelectorAll","children","siblings","Array","prototype","slice","call","filter","e","next","nodeType","previous","previousSibling","each","nodeList","i","index","list"],"mappings":"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","file":"dom.da4f0b45.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  create(name) {\r\n    //字符串 支持内容与否'div''<div>hi</div>'\r\n    if (/^\\s*<[\\w\\W]*>(\\s)*$/g.test(name)) {\r\n      let container = document.createElement(\"template\");\r\n      container.innerHTML = name.trim();\r\n      return container.content.firstChild;\r\n    } else {\r\n      return document.createElement(name);\r\n    }\r\n  },\r\n  append(parent, child) {\r\n    parent.appendChild(child);\r\n  },\r\n  before(node1, node2) {\r\n    //插入处，插入目标\r\n    node1.parentNode.insertBefore(node2, node1);\r\n  },\r\n  after(node1, node2) {\r\n    node1.parentNode.insertBefore(node1, node2.nextSibling);\r\n  },\r\n  remove(node) {\r\n    //为了向下兼容，因此不用node.remove()\r\n    node.parentNode.removeChild(node);\r\n    return node;\r\n  },\r\n  wrap(node1, parent) {\r\n    //目标元素，父元素\r\n    dom.before(node1, parent);\r\n    dom.append(parent, node1);\r\n  },\r\n  empty(node) {\r\n    //清空node下的所有节点\r\n    let temp = [];\r\n    while (node.firstChild) {\r\n      temp.push(node.firstChild);\r\n      dom.remove(node.firstChild);\r\n    }\r\n    return temp;\r\n  },\r\n  attr(node, name, value) {\r\n    //读写元素的属性\r\n    if (arguments.length === 2) {\r\n      //重载\r\n      return node.getAttribute(name);\r\n    } else if (arguments.length === 3) {\r\n      node.setAttribute(name, value);\r\n    }\r\n  },\r\n  text(node, string) {\r\n    //读写元素的文本内容\r\n    if (arguments.length === 1) {\r\n      //适配老版本ie\r\n      if (\"innerText\" in node) {\r\n        return node.innerText;\r\n      } else {\r\n        return node.textContent;\r\n      }\r\n    }\r\n    if (arguments.length === 2) {\r\n      if (\"innerText\" in node) {\r\n        node.innerText = string;\r\n      } else {\r\n        node.textContent = string;\r\n      }\r\n    }\r\n  },\r\n  html(node, string) {\r\n    //读写元素的html内容\r\n    if (arguments.length === 1) {\r\n      return node.innerHTML;\r\n    }\r\n    if (arguments.length === 2) {\r\n      node.innerHTML = string;\r\n    }\r\n  },\r\n  style(node, name, value) {\r\n    //读写原色css\r\n    if (arguments.length === 3) {\r\n      node.style[name] = value;\r\n    } else if (arguments.length === 2) {\r\n      if (typeof name === \"string\") return node.style[name];\r\n      if (typeof name === \"object\") {\r\n        for (key in name) {\r\n          node.style[key] = name[key];\r\n        }\r\n      }\r\n    }\r\n  },\r\n  class: {\r\n    //修改classList\r\n    add(node, name) {\r\n      node.classList.add(name);\r\n    },\r\n    remove(node, name) {\r\n      node.classList.remove(name);\r\n    },\r\n    has(node, name) {\r\n      return node.classList.contains(name);\r\n    },\r\n  },\r\n  on(node, event, fn) {\r\n    node.addEventListener(event, fn);\r\n  },\r\n  off(node, event, fn) {\r\n    node.removeEventListener(event, fn);\r\n  },\r\n  find(node, scope) {\r\n    //获取标签\r\n    let _node = (scope || document).querySelectorAll(node);\r\n    if (_node.length === 1) {\r\n      return _node[0];\r\n    } else {\r\n      return _node;\r\n    }\r\n  },\r\n  parent(node) {\r\n    return node.parentNode;\r\n  },\r\n  children(node) {\r\n    return node.children;\r\n  },\r\n  siblings(node) {\r\n    return Array.prototype.slice\r\n      .call(node.parentNode.children)\r\n      .filter((e) => e !== node);\r\n  },\r\n  next(node) {\r\n    let temp = node.nextSibling;\r\n    while (temp && temp.nodeType === 3) {\r\n      temp = temp.nextSibling;\r\n    }\r\n    return temp;\r\n  },\r\n  previous(node) {\r\n    let temp = node.previousSibling;\r\n    while (temp && temp.nodeType === 3) {\r\n      temp = temp.previousSibling;\r\n    }\r\n    return temp;\r\n  },\r\n  each(nodeList, fn) {\r\n    for (let i = 0; i < nodeList.length; i++) {\r\n      fn.call(null, nodeList[i]);\r\n    }\r\n  },\r\n  index(node) {\r\n    let list = this.children(dom.parent(node));\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i] === node) return i;\r\n    }\r\n  },\r\n};\r\n"]}